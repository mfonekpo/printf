#include <stdarg.h>
#include "main.h"
#include "holberton.h"

/**
 * _printf - Our custom printf function
 * @format: The format string
 *
 * Return: The number of characters printed (excluding the null byte)
 */
int _printf4(const char *format, ...)
{
	va_list args;
	int printed_chars = 0;

	if (format == NULL)
		return (-1);

	va_start(args, format);
	printed_chars = parse_format(format, args);
	va_end(args);

	return (printed_chars);
}

/**
 * parse_format - Parse and print the format string
 * @format: The format string
 * @args: The variadic arguments
 *
 * Return: The number of characters printed
 */
int parse_format(const char *format, va_list args)
{
	int i, j, printed_chars = 0;
	print_f formats[] = {
		{'u', print_unsigned},
		{'o', print_octal},
		{'x', print_hex},
		{'X', print_hex_upper},
		{0, NULL}
	};

	for (i = 0; format[i]; i++)
	{
		if (format[i] == '%')
		{
			i++;
			for (j = 0; formats[j].specifier != 0; j++)
			{
				if (format[i] == formats[j].specifier)
				{
					printed_chars += formats[j].f(args);
					break;
				}
			}
			if (formats[j].specifier == 0)
			{
				_putchar('%');
				_putchar(format[i]);
				printed_chars += 2;
			}
		}
		else
		{
			_putchar(format[i]);
			printed_chars++;
		}
	}

	return (printed_chars);
}
