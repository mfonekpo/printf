/**
 * _printf - Produces output according to a format.
 *
 * @format: A character string containing the format string.
 * @...: A variable number of arguments corresponding to the format specifiers in the format string.
 *
 * Returns: The number of characters printed (excluding the null byte used to end output to strings).
 */
int _printf(const char *format, ...)
{
    va_list args;
    int count = 0;

    va_start(args, format);

    while (*format != '\0') {
        if (*format == '%') {
            switch (*(++format)) {
                case 'c':
                    count += _putchar((char) va_arg(args, int));
                    break;
                case 's':
                    count += _puts(va_arg(args, char *));
                    break;
                case '%':
                    count += _putchar('%');
                    break;
                default:
                    count += _putchar(*format);
                    break;
            }
        } else {
            count += _putchar(*format);
        }

        format++;
    }

    va_end(args);

    return count;
}
